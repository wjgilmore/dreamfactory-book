(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{147:function(e,t,n){"use strict";n.r(t);var a=n(0),r=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),n("p",[e._v("In this chapter you'll learn how to install and configure DreamFactory. A number of installation solutions are available, including GitHub repository, point-and-click installers, Docker container, and cloud-specific installers. Be sure to carefully read through the set of options before making a decision, because some might be more suitable than others for your particular situation.")]),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("Regardless of whether you'd like to spin up a DreamFactory instance on your local laptop, within a cloud environment such as AWS or Google Cloud, or Docker, we have a ready-made solution for you!")]),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("Cloning DreamFactory's OSS repository has long been by far the most popular way to access the software. To clone the repository you'll need to install a Git client on your local machine or a server, at which point you can clone it using the following command:")]),e._v(" "),e._m(3),e._v(" "),n("p",[e._v("DreamFactory is built atop the very popular "),n("a",{attrs:{href:"http://www.laravel.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Laravel Framework"),n("OutboundLink")],1),e._v(", which is in turn built atop PHP. This means DreamFactory is almost ubiquitously supported in all hosting environments; you'll just need to make sure your hosting environment is running PHP 7.1 or greater, a recent version of a web server such as Apache or NGINX, access to one of four databases for storing configuration data (MySQL/MariaDB, PostgreSQL, SQLite, and MS SQL Server are supported), and that you have adequate permissions to install a few requisite PHP extensions. You can learn more about the required software and extensions via our wiki:")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://wiki.dreamfactory.com/DreamFactory/Installation#GitHub",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://wiki.dreamfactory.com/DreamFactory/Installation#GitHub"),n("OutboundLink")],1)]),e._v(" "),e._m(4),e._v(" "),n("p",[e._v("Our Docker container is increasingly popular, and includes everything you need to run DreamFactory including Ubuntu 16.04, PHP 7.1, and the NGINX web server. It also includes all of the required PHP extensions, meaning you should be able to begin experimenting with the latest DreamFactory version as quickly as you can spin up the container! To learn more about the container, head over to our df-docker repository:")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/dreamfactorysoftware/df-docker",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/dreamfactorysoftware/df-docker"),n("OutboundLink")],1)]),e._v(" "),e._m(5),e._v(" "),n("p",[e._v("Many users simply want to evaluate DreamFactory without putting any time or effort whatsoever into procuring a test server or fiddling with configuration issues. If you fall into this category then our Bitnami point-and-click installers are for you! These virtual machines include everything you need to begin running DreamFactory, and include a built-in database server, web server, PHP runtime, and a bunch of other useful software.")]),e._v(" "),n("p",[e._v("Installers are available for Linux, Windows, and Mac OS X. Download your desired version via the following link:")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://www.dreamfactory.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.dreamfactory.com/downloads"),n("OutboundLink")],1)]),e._v(" "),e._m(6),e._v(" "),n("p",[e._v("Cloud environments are the hosting solution of choice these days, and for good reason. Cloud service providers offer unsurpassed levels of stability, performance, and security, and countless additional features capable of maximizing IT teams' efficiency while minimizing costs. DreamFactory offers Bitnami images targeting all of the major cloud providers, including AWS, Azure, Google, and Oracle Cloud. Download your desired version via the following link:")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://www.dreamfactory.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.dreamfactory.com/downloads"),n("OutboundLink")],1)]),e._v(" "),e._m(7),e._v(" "),n("p",[e._v("If you've cloned the GitHub repository, you'll need to carry out a few additional steps before launching your DreamFactory instance. The first step involves ensuring your server requirements have been met. Let's tackle those first, followed by an overview of software installation.")]),e._v(" "),e._m(8),e._v(" "),n("div",{staticClass:"warning custom-block"},[n("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),n("p",[e._v("This guide is under heavy development, and certain parts are complete. We suggest reading through the current installation documentation, "),n("a",{attrs:{href:"http://wiki.dreamfactory.com/DreamFactory/Installation#GitHub",target:"_blank",rel:"noopener noreferrer"}},[e._v("available here"),n("OutboundLink")],1),e._v(".")])]),e._v(" "),n("p",[e._v("Server configuration is going to vary according to your operating system. To ensure the instructions are as specific and straightforward as possible, we've broken them out into subchapters:")]),e._v(" "),n("ul",[n("li",[n("router-link",{attrs:{to:"./chapter02/ubuntu-server-configuration.html"}},[e._v("Debian / Ubuntu")])],1)]),e._v(" "),n("p",[e._v("If you plan on using PHP in conjunction with one of the following databases, please review the pertinent subchapters presented below:")]),e._v(" "),n("ul",[n("li",[n("router-link",{attrs:{to:"./chapter02/microsoft-sql-server.html"}},[e._v("Microsoft SQL Server")])],1),e._v(" "),n("li",[n("router-link",{attrs:{to:"./chapter02/sap-sql-anywhere.html"}},[e._v("SAP SQL Anywhere")])],1)]),e._v(" "),e._m(9),e._v(" "),n("p",[e._v("The first step involves installing the required PHP packages using Composer:")]),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),n("p",[e._v("With the packages installed, you'll next need to configure your system database. This database will house various configuration settings associated with your instance. DreamFactory supports four databases for this purpose, including Microsoft SQL Server, MySQL, PostgreSQL, and SQLite. Keep in mind you'll need to first create this database along with an account DreamFactory will use to connect to it.")]),e._v(" "),n("p",[e._v("You'll configure the system database by running a terminal command and answering a few prompts about your database configuration.")]),e._v(" "),n("p",[e._v("To do so, run the following command from inside your project's root directory:")]),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),n("p",[e._v("Next you'll be prompted to create your first system administration account:")]),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),n("p",[e._v("Immediately following this prompt you'll be informed of successful setup:")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),n("img",{attrs:{src:"/images/02/first_boot.png",width:"800"}}),e._v(" "),e._m(24),e._v(" "),n("p",[e._v("It is often helpful to have different configuration values based on the environment where the application is running. For example, you may wish to use a different cache driver locally than you do on your production server.")]),e._v(" "),n("p",[e._v("To make this a cinch, Laravel utilizes the "),n("a",{attrs:{href:"https://github.com/vlucas/phpdotenv",target:"_blank",rel:"noopener noreferrer"}},[e._v("DotEnv"),n("OutboundLink")],1),e._v(" PHP library by Vance Lucas. In a fresh Laravel installation, the root directory of your application will contain a "),n("code",[e._v(".env.example")]),e._v(" file. If you install Laravel via Composer, this file will automatically be renamed to "),n("code",[e._v(".env")]),e._v(". Otherwise, you should rename the file manually. For more information, please see the official documentation from Laravel.")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://laravel.com/docs/5.5/configuration#environment-configuration",target:"_blank",rel:"noopener noreferrer"}},[e._v("Laravel Docs on .env"),n("OutboundLink")],1)]),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),n("p",[e._v("When working to get your environment up and running, DreamFactory recommends turning debugging on, as well as increasing the sensitivity of the logging environment. In order to turn the application debugging on, please uncomment and change the following value:")]),e._v(" "),e._m(28),n("p",[e._v("To modify your logging values you will need to uncomment and modify the following snippets of code:")]),e._v(" "),e._m(29),e._m(30),e._v(" "),n("p",[e._v("Our DreamFactory environment is still a work-in-progress, however many users are actively using it thanks to Docker's streamlined configuration and deployment capabilities. Occasionally you'll want to update to a newer version of DreamFactory so we've assembled the following instructions as a guide.")]),e._v(" "),e._m(31),e._v(" "),n("p",[e._v("Begin by opening a terminal and entering your DreamFactory instance's root directory. Then execute this command:")]),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),n("p",[e._v("Next, run the following command:")]),e._v(" "),e._m(34),e._v(" "),n("p",[e._v("This displays all of the tagged versions. Begin by stopping the running DreamFactory container without deleting it. Keep in mind that when you run this command, your DreamFactory instance will go offline until the upgrade process is completed:")]),e._v(" "),e._m(35),e._v(" "),n("p",[e._v("For the purposes of this example we'll presume you're running 2.12 and want to upgrade to 2.14.1. To do so you'll first want to checkout the 2.14.1 tag:")]),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._v(" "),e._m(39),e._v(" "),n("p",[e._v("Save these changes, and then rebuild your container using the following command:")]),e._v(" "),e._m(40),e._v(" "),n("p",[e._v("Once complete, you can run the following command to confirm the containers are up and running:")]),e._v(" "),e._m(41),e._v(" "),n("p",[e._v("If something has gone wrong, and one of the containers indicates it has exited, you can view the logs for that container:")]),e._v(" "),e._m(42),e._v(" "),n("p",[e._v("Presuming the containers are up and running, you'll next want to determine whether the DreamFactory system database schema has changed. To do so run this command:")]),e._v(" "),e._m(43),e._v(" "),e._m(44),e._v(" "),e._m(45),e._v(" "),n("p",[e._v("Finally, you'll want to clear your application and configuration caches by executing the following commands:")]),e._v(" "),e._m(46),e._v(" "),n("p",[e._v("With that done, open your DreamFactory instance in the browser, and confirm the environment is operational.")]),e._v(" "),e._m(47),e._v(" "),n("p",[e._v("Whether your API consumer is an iPhone or Android application, a SPA (Single Page Application), or another server altogether, that consumer is often referred to as the "),n("em",[e._v("client")]),e._v(". The client issues HTTP requests to the REST API, parsing the responses and reacting accordingly. Although in most cases your team will use libraries such as "),n("a",{attrs:{href:"https://github.com/Alamofire/Alamofire",target:"_blank",rel:"noopener noreferrer"}},[e._v("Alamofire"),n("OutboundLink")],1),e._v(" or "),n("a",{attrs:{href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"}},[e._v("Axios"),n("OutboundLink")],1),e._v(" to manage these requests, you'll often want to interact with the APIs in a much more fluid manner during the investigatory and learning phase. The API Docs feature serves this need well, however the API Docs interface lacks the ability to bookmark and otherwise persist queries, manage parameters programmatically using variables, and other features useful for maintaining a set of easily accessible configurations.")]),e._v(" "),n("p",[e._v("Fortunately, there are a number of HTTP clients which fill this void very well. Two of the most popular are "),n("a",{attrs:{href:"https://insomnia.rest/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Insomnia"),n("OutboundLink")],1),e._v(" and "),n("a",{attrs:{href:"https://www.getpostman.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Postman"),n("OutboundLink")],1),e._v(", which are available on OSX and multiple operating systems, respectively. In this section we'll introduce you to both HTTP clients, and as an added bonus talk about the ubiquitous cURL client which is quite possibly the most popular piece of software you've never heard of.")]),e._v(" "),e._m(48),e._v(" "),n("p",[n("a",{attrs:{href:"https://insomnia.rest",target:"_blank",rel:"noopener noreferrer"}},[e._v("Insomnia"),n("OutboundLink")],1),e._v(" is a cross-platform REST client, built on top of "),n("a",{attrs:{href:"https://electronjs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Electron"),n("OutboundLink")],1),e._v(". Insomnia is realtively new on the scene compared to cURL and Postman but offers a bevy of features that certainly make it competitive.  They have a very slick UI, and a ton of features, including a team option.")]),e._v(" "),n("img",{attrs:{src:"/images/02/insomnia.png",width:"800"}}),e._v(" "),e._m(49),e._v(" "),n("p",[n("a",{attrs:{href:"https://www.getpostman.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Postman"),n("OutboundLink")],1),e._v(" is a tried and true GUI interface with great docs to help you set up your testing environment.  They have plans for everyone, from free solo users to large, enterprise teams.  Postman also has a great feature called "),n("a",{attrs:{href:"https://www.getpostman.com/api-network/",target:"_blank",rel:"noopener noreferrer"}},[e._v("API Network"),n("OutboundLink")],1),e._v(", which has sample API calls from all sorts of sources.  It is definitely worth a look.")]),e._v(" "),n("img",{attrs:{src:"/images/02/postman1.png",width:"800"}}),e._v(" "),e._m(50),e._v(" "),n("p",[n("a",{attrs:{href:"https://curl.haxx.se/",target:"_blank",rel:"noopener noreferrer"}},[e._v("cURL's"),n("OutboundLink")],1),e._v(" lack of a polished interface may lead you to believe it's inferior to Insomnia and Postman. Not so! cURL is an incomparably capable bit of software.  cURL is a command line tool and library for transferring data with URL syntax, supporting HTTP, HTTPS, FTP, FTPS, GOPHER, TFTP, SCP, SFTP, SMB, TELNET, DICT, LDAP, LDAPS, FILE, IMAP, SMTP, POP3, RTSP and RTMP. libcurl offers a myriad of powerful features")]),e._v(" "),e._m(51),e._v(" "),n("p",[e._v("With DreamFactory installed and configured, it's time to build your first API! In the next chapter we'll do exactly that, walking through the steps necessary to generate a database-based API.")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"chapter-2-installing-and-configuring-dreamfactory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chapter-2-installing-and-configuring-dreamfactory","aria-hidden":"true"}},[this._v("#")]),this._v(" Chapter 2. Installing and Configuring DreamFactory")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"choosing-a-dreamfactory-version"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#choosing-a-dreamfactory-version","aria-hidden":"true"}},[this._v("#")]),this._v(" Choosing a DreamFactory Version")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"the-dreamfactory-github-repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-dreamfactory-github-repository","aria-hidden":"true"}},[this._v("#")]),this._v(" The DreamFactory GitHub Repository")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ git clone https://github.com/dreamfactorysoftware/dreamfactory/\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"bitnami"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitnami","aria-hidden":"true"}},[this._v("#")]),this._v(" Bitnami")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"cloud-images"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cloud-images","aria-hidden":"true"}},[this._v("#")]),this._v(" Cloud Images")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"installing-and-configuring-dreamfactory-from-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-and-configuring-dreamfactory-from-source","aria-hidden":"true"}},[this._v("#")]),this._v(" Installing and Configuring DreamFactory from Source")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"configuring-your-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring-your-server","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuring Your Server")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"installing-dreamfactory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-dreamfactory","aria-hidden":"true"}},[this._v("#")]),this._v(" Installing DreamFactory")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ composer install --no-dev\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("--no-dev")]),this._v(" option tells Composer to not install the development-specific dependencies. These development dependencies are used by our OSS community and internal developers alike to assist in software development. You can review the list of both required and developmental dependencies by opening the "),t("code",[this._v("composer.json")]),this._v(" file found in the project's root directory.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If you receive an error regarding "),t("code",[this._v("Your requirements could not be resolved to an installable set of packages")]),this._v(", and you don't require MongoDB, then you can quickly hurdle the issue by additionally supplying the "),t("code",[this._v("--ignore-platform-reqs")]),this._v(" option when running Composer.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('$ php artisan df:env\n**************************************************\n* Configuring DreamFactory... \n**************************************************\nCreated .env file with default configuration.\nCreated phpunit.xml with default configuration.\n\n Which database would you like to use for system tables? [sqlite]:\n  [0] sqlite\n  [1] mysql\n  [2] pgsql\n  [3] sqlsrv\n > 1\n\n Enter your mysql Host:\n > 192.168.10.10\n\n Enter your Database Port [3306]:\n > \n\n Enter your database name:\n > dreamfactory\n\n Enter your database username:\n > dreamfactory_user\n\n Enter your database password:\n > \n\n Re-enter your database password:\n > \n\nCACHE DRIVER  is not supported. Using default driver file.\nConfiguration complete!\n************************* WARNING! **************************\n*\n* Please take a moment to review the .env file. You can make any \n* changes as necessary there. \n*\n* Please run "php artisan df:setup" to complete the setup process.\n*\n*************************************************************\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("With the system database configured, it's time to create the system tables and seed data and then create your first system administrator account. This is accomplished by running the "),t("code",[this._v("df:setup")]),this._v(" command. Because multiple prompts are involved with this command, I'll break the command output into a few parts. Immediately after running "),t("code",[this._v("df:setup")]),this._v(", the command will create the database tables and seed data:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ php artisan df:setup\n*********************************************\n* Welcome to DreamFactory Setup.\n*********************************************\nRunning Migrations...\nMigration table created successfully.\nMigration driver used: sqlite\nMigrating: 2015_01_27_190908_create_system_tables\nMigrated:  2015_01_27_190908_create_system_tables\nMigrating: 2015_01_27_190909_create_db_extras_tables\nMigrated:  2015_01_27_190909_create_db_extras_tables\n...\nMigrating: 2018_01_23_155210_script_implements_access_list\nMigrated:  2018_01_23_155210_script_implements_access_list\nMigrating: 2018_01_29_030233_create_bitbucket_config_table\nMigrated:  2018_01_29_030233_create_bitbucket_config_table\nMigration completed successfully.\n*********************************************\n*********************************************\nRunning Seeder...\nSeeding: AppSeeder\nApp resources created: admin, api_docs, file_manager\nSeeding: EmailTemplateSeeder\nEmail Template resources created: User Invite Default, User Registration Default, Password Reset Default\nService resources created: system, api_docs, files, logs, db, email\nSystem service updated.\nService resources created: user\nAll tables were seeded successfully.\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("Creating the first admin user...\n\n Enter your first name:\n > Jason\n\n Enter your last name:\n > Gilmore\n\n Enter your email address?:\n > jason.gilmore@dreamfactory.com\n\n Choose a password:\n > \n\n Re-enter password:\n > \n\nSuccessfully created first admin user.\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("Finally, you'll be prompted to make sure your application's "),n("code",[e._v("storage")]),e._v(" and "),n("code",[e._v("bootstrap/cache")]),e._v(" directories are properly configured. This involves making sure the directory ownership and permissions are properly set using the "),n("code",[e._v("chown")]),e._v(" and "),n("code",[e._v("chmod")]),e._v(" commands:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("* Please make sure following directories and all directories under \n* them are readable and writable by your web server \n*  -> storage/\n*  -> bootstrap/cache/\n* Example:\n*  > sudo chown -R {www user}:{your user group} storage/ bootstrap/cache/ \n*  > sudo chmod -R 2775 storage/ bootstrap/cache/ \n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("{www user}")]),this._v(" string is a placeholder for the owner of your web server daemon owner. The "),t("code",[this._v("{your user group}")]),this._v(" string is a placeholder for the web server group daemon owner.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('**********************************************************\n******************** Setup Successful! *******************\n**********************************************************\n* Setup is complete! Your instance is ready. Please launch \n* your instance using a browser. You can run "php artisan serve" \n* to try out your instance without setting up a web server.\n**********************************************************\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If you've installed and configured DreamFactory to run on a web server, then you can open your browser and navigate to the IP address or domain name. Otherwise, if you haven't yet installed a web server, you can run "),t("code",[this._v("php artisan serve")]),this._v(":")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ php artisan serve\nLaravel development server started: <http://127.0.0.1:8000>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("This will start a simple PHP server running on "),t("code",[this._v("127.0.0.1")]),this._v(" port "),t("code",[this._v("8000")]),this._v(". Open your browser and navigate to "),t("code",[this._v("http://127.0.0.1:8000")]),this._v(" and you should see the following screen:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"introducing-the-env-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introducing-the-env-file","aria-hidden":"true"}},[this._v("#")]),this._v(" Introducing the .env File")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"enabling-debugging-and-logging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#enabling-debugging-and-logging","aria-hidden":"true"}},[this._v("#")]),this._v(" Enabling Debugging and Logging")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("By default, DreamFactory does not enable debugging. Debugging, while a great tool to help monitor your application, can be a large performance sink inside of a production environment. In the example "),t("code",[this._v(".env")]),this._v(" file below you can see where these options live.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{attrs:{class:"token shell-comment comment"}},[e._v("##==============================================================================")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## Environment Settings")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("##==============================================================================")]),e._v("\n\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## Use the installer.sh file in this directory to easily edit these settings.")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## By default each setting is set to its internal default and commented out.")]),e._v("\n\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("##------------------------------------------------------------------------------")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## Application Settings")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("##------------------------------------------------------------------------------")]),e._v("\n\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## Application name used in email templates and other displays")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("#APP_NAME=DreamFactory")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## Encryption cipher options are AES-128-CBC or AES-256-CBC (default)")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("#APP_CIPHER=AES-256-CBC")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## Return debugging trace in exceptions: true or false (default)")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("#APP_DEBUG=false")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## Environment this installation is running in: local, production (default)")]),e._v("\n"),n("span",{attrs:{class:"token constant"}},[e._v("APP_ENV")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("local\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## Use 'php artisan key:generate' to generate a new key. Key size must be 16, 24 or 32.")]),e._v("\n"),n("span",{attrs:{class:"token constant"}},[e._v("APP_KEY")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("base64"),n("span",{attrs:{class:"token punctuation"}},[e._v(":")]),n("span",{attrs:{class:"token constant"}},[e._v("YOUR_APP_KEY")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("#APP_LOCALE=en")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## LOG setting. Where and/or how the log file is setup. Options are single (default), daily, syslog, errorlog")]),e._v("\n"),n("span",{attrs:{class:"token constant"}},[e._v("APP_LOG")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("daily\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## LOG Level. This is hierarchical and goes in the following order.")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## DEBUG -> INFO -> NOTICE -> WARNING -> ERROR -> CRITICAL -> ALERT -> EMERGENCY")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## If you set log level to WARNING then all WARNING, ERROR, CRITICAL, ALERT, and EMERGENCY")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## will be logged. Setting log level to DEBUG will log everything.")]),e._v("\n"),n("span",{attrs:{class:"token constant"}},[e._v("APP_LOG_LEVEL")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("debug\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## When APP_LOG is set to 'daily', this setting dictates how many log files to keep.")]),e._v("\n"),n("span",{attrs:{class:"token constant"}},[e._v("APP_LOG_MAX_FILES")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),n("span",{attrs:{class:"token number"}},[e._v("5")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## PHP Date and Time function timezone setting")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("#APP_TIMEZONE=UTC")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## External URL representing this install")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("#APP_URL=http:")]),n("span",{attrs:{class:"token comment"}},[e._v("//127.0.0.1:8000")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("## The starting point (page, application, etc.) when a browser points to the server root URL,")]),e._v("\n"),n("span",{attrs:{class:"token shell-comment comment"}},[e._v("#DF_LANDING_PAGE=/dreamfactory/dist/index.html")]),e._v("\n"),n("span",{attrs:{class:"token constant"}},[e._v("DF_LICENSE_KEY")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),n("span",{attrs:{class:"token constant"}},[e._v("YOUR_LICENSE_KEY")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{attrs:{class:"token constant"}},[this._v("APP_DEBUG")]),t("span",{attrs:{class:"token operator"}},[this._v("=")]),t("span",{attrs:{class:"token boolean"}},[this._v("true")]),this._v("\n")])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{attrs:{class:"token constant"}},[e._v("APP_LOG")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("daily\n"),n("span",{attrs:{class:"token constant"}},[e._v("APP_LOG_LEVEL")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("debug\n"),n("span",{attrs:{class:"token constant"}},[e._v("APP_LOG_MAX_FILES")]),n("span",{attrs:{class:"token operator"}},[e._v("=")]),n("span",{attrs:{class:"token number"}},[e._v("5")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"updating-your-dreamfactory-docker-environment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#updating-your-dreamfactory-docker-environment","aria-hidden":"true"}},[this._v("#")]),this._v(" Updating Your DreamFactory Docker Environment")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"warning custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),t("p",[this._v("You are presumably reading this section with the intention of upgrading a DreamFactory production environment. As with any software, things can and do go wrong with upgrading production environments, and therefore you are urged to possess a readily accessible file and system database backup and recovery plan before attempting an upgrade. You have been warned!")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ docker-compose exec web cat .env | grep APP_KEY\nAPP_KEY=base64:U/En8zI8WKrZ/F7CA9KncWjGTIhbvpGD5wN3eLoDZuQ=\n...\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("A couple of lines of output will be returned, however you should only copy the line beginning with "),t("code",[this._v("APP_KEY")]),this._v(" into a text file. Keep in mind at a "),t("em",[this._v("minimum")]),this._v(" you'll need to copy down the "),t("code",[this._v("APP_KEY")]),this._v(" value. If you've overridden other defaults, such as the type, location, and credentials associated with the system database, you'll need to copy those too. It is very important you perform this step otherwise you'll run into all sorts of upgrade-related issues.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ git tag --list\n2.1\n2.14.1\n2.2\n2.2.1\n...\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ docker-compose stop\nStopping df-docker_web_1   ... done\nStopping df-docker_mysql_1 ... done\nStopping df-docker_redis_1 ... done\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ git checkout tags/2.14.1\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("Next, you'll need to add that "),n("code",[e._v("APP_KEY")]),e._v(" to the "),n("code",[e._v("docker-compose.yml")]),e._v(" file. Open "),n("code",[e._v("docker-compose.yml")]),e._v(" in your favorite code editor, scroll down to the "),n("code",[e._v("web")]),e._v(" service, and add the "),n("code",[e._v("APP_KEY")]),e._v(" property and associated value alongside the other environment variables:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("...\nDB_DATABASE: dreamfactory\nAPP_KEY: 'base64:U\\/En8zI8WKrZ\\/F7CA9KncWjGTIhbvpGD5wN3eLoDZuQ='\nCACHE_DRIVER: redis\n...\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"danger custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),t("p",[this._v("It is crucial that you encapsulate the "),t("code",[this._v("APP_KEY")]),this._v(" value within single quotes, and additionally escape with a backslash any forward slashes appearing in your key! As an example, compare the "),t("code",[this._v("APP_KEY")]),this._v(" entry found above with the output displayed earlier.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ docker-compose up -d --build\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ docker-compose ps\n      Name                     Command               State          Ports\n--------------------------------------------------------------------------------\ndf-docker_mysql_1   docker-entrypoint.sh mysqld      Up      3306/tcp, 33060/tcp\ndf-docker_redis_1   docker-entrypoint.sh redis ...   Up      6379/tcp\ndf-docker_web_1     /docker-entrypoint.sh            Up      0.0.0.0:80->80/tcp\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ docker-compose logs web\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ docker-compose exec web php artisan migrate:status\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If you see "),t("code",[this._v("Y")]),this._v(" in the tabular output's "),t("code",[this._v("Ran?")]),this._v(" column, then the schema has not changed. If you see "),t("code",[this._v("N")]),this._v(" at any point, then you'll need to run the following command to update your system database schema:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ docker-compose exec web php artisan migrate\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("$ docker-compose exec web php artisan config:clear\nConfiguration cache cleared!\n\n$ docker-compose exec web php artisan cache:clear\nCache cleared successfully.\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"choosing-an-http-client"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#choosing-an-http-client","aria-hidden":"true"}},[this._v("#")]),this._v(" Choosing an HTTP Client")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"insomnia"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insomnia","aria-hidden":"true"}},[this._v("#")]),this._v(" Insomnia")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"postman"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#postman","aria-hidden":"true"}},[this._v("#")]),this._v(" Postman")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"curl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#curl","aria-hidden":"true"}},[this._v("#")]),this._v(" cURL")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"conclusion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#conclusion","aria-hidden":"true"}},[this._v("#")]),this._v(" Conclusion")])}],!1,null,null,null);r.options.__file="chapter02.md";t.default=r.exports}}]);